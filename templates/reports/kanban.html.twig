{% extends 'index.html.twig' %}

{% block centent %}

<div class="container mx-auto px-4 py-6">
    <h1 class="text-2xl font-bold mb-6">Kanban Board</h1>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <!-- To Do Column -->
        <div class="flex flex-col bg-white rounded-lg shadow">
            <div class="flex items-center justify-between p-4 border-b">
                <h2 class="text-lg font-semibold">To Do</h2>
                <button type="button" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z"></path>
                    </svg>
                </button>
            </div>
            
            <div class="flex-1 min-h-[200px] p-4 overflow-y-auto">
               
                {# {% for task in tasks.todo %} #}
                <div class="mb-4 bg-white border rounded-lg shadow-sm hover:shadow transition">
                    <div class="p-4">
                        <div class="flex justify-between items-start mb-2">
                            {# <h3 class="font-medium">{{ task.title }}</h3> #}
                            <button type="button" class="text-gray-400 hover:text-gray-600">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                                </svg>
                            </button>
                        </div>
                        {# <p class="text-sm text-gray-600 mb-3">{{ task.description }}</p> #}
                        <div class="flex items-center justify-between">
                            <div class="flex -space-x-2">
                                {# {% for user in task.assignees %}
                                <img class="w-6 h-6 rounded-full border border-white" src="{{ user.avatar }}" alt="{{ user.name }}">
                                {% endfor %} #}
                            </div>
                            <div class="bg-red-100 text-red-800 text-xs font-medium px-2.5 py-0.5 rounded-full flex items-center">
                                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"></path>
                                </svg>
                                {# {{ task.daysLeft }} days left #}
                            </div>
                        </div>
                    </div>
                </div>
                {# {% endfor %} #}
            </div>
        </div>
        
        <!-- In Progress Column -->
        <div class="flex flex-col bg-white rounded-lg shadow">
            <div class="flex items-center justify-between p-4 border-b">
                <h2 class="text-lg font-semibold">In Progress</h2>
                <button type="button" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z"></path>
                    </svg>
                </button>
            </div>
            
            <div class="flex-1 min-h-[200px] p-4 overflow-y-auto">
                {# {% for task in tasks.inProgress %} #}
                <div class="mb-4 bg-white border rounded-lg shadow-sm hover:shadow transition">
                    <div class="p-4">
                        <div class="flex justify-between items-start mb-2">
                            {# <h3 class="font-medium">{{ task.title }}</h3> #}
                            <button type="button" class="text-gray-400 hover:text-gray-600">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                                </svg>
                            </button>
                        </div>
                        {# <p class="text-sm text-gray-600 mb-3">{{ task.description }}</p> #}
                        <div class="flex items-center justify-between">
                            <div class="flex -space-x-2">
                                {# {% for user in task.assignees %}
                                <img class="w-6 h-6 rounded-full border border-white" src="{{ user.avatar }}" alt="{{ user.name }}">
                                {% endfor %} #}
                            </div>
                            <div class="bg-orange-100 text-orange-800 text-xs font-medium px-2.5 py-0.5 rounded-full flex items-center">
                                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"></path>
                                </svg>
                                {# {{ task.daysLeft }} days left #}
                            </div>
                        </div>
                    </div>
                </div>
                {# {% endfor %} #}
                
                <div class="flex items-center justify-center p-4 border border-dashed rounded-lg border-gray-300 hover:border-gray-400 bg-gray-50 hover:bg-gray-100 transition cursor-pointer">
                    <span class="text-gray-500 flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Add new task
                    </span>
                </div>
            </div>
        </div>
        
        <!-- Done Column -->
        <div class="flex flex-col bg-white rounded-lg shadow">
            <div class="flex items-center justify-between p-4 border-b">
                <h2 class="text-lg font-semibold">Done</h2>
                <button type="button" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z"></path>
                    </svg>
                </button>
            </div>
            
            <div class="flex-1 min-h-[200px] p-4 overflow-y-auto">
                {# {% for task in tasks.done %} #}
                <div class="mb-4 bg-white border rounded-lg shadow-sm hover:shadow transition">
                    <div class="p-4">
                        <div class="flex justify-between items-start mb-2">
                            {# <h3 class="font-medium">{{ task.title }}</h3> #}
                            <button type="button" class="text-gray-400 hover:text-gray-600">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                                </svg>
                            </button>
                        </div>
                        {# <p class="text-sm text-gray-600 mb-3">{{ task.description }}</p> #}
                        <div class="flex items-center justify-between">
                            <div class="flex -space-x-2">
                                {# {% for user in task.assignees %}
                                <img class="w-6 h-6 rounded-full border border-white" src="{{ user.avatar }}" alt="{{ user.name }}">
                                {% endfor %} #}
                            </div>
                        </div>
                    </div>
                </div>
                {# {% endfor %} #}
            </div>
        </div>
    </div>
</div>


<!-- New Task Modal -->
<div id="newTaskModal" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-modal md:h-full">
    <div class="relative w-full h-full max-w-md md:h-auto">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
            <button type="button" class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white" data-modal-hide="newTaskModal">
                <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                <span class="sr-only">Close modal</span>
            </button>
            <div class="px-6 py-6 lg:px-8">
                <h3 class="mb-4 text-xl font-medium text-gray-900 dark:text-white">Create New Task</h3>
                <form class="space-y-6" action="#">
                    <div>
                        <label for="task-name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Task Name</label>
                        <input type="text" name="task-name" id="task-name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" placeholder="Task Name" required>
                    </div>
                    <div>
                        <label for="task-desc" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Task Description</label>
                        <textarea name="task-desc" id="task-desc" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" placeholder="Task Description" required></textarea>
                    </div>
                    <button type="submit" class="w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Create Task</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const newTaskButtons = document.querySelectorAll('[data-modal-toggle="newTaskModal"]');
        newTaskButtons.forEach(button => {
            button.addEventListener('click', function () {
                const modal = document.getElementById('newTaskModal');
                modal.classList.remove('hidden');
            });
        });

        const closeModalButtons = document.querySelectorAll('[data-modal-hide="newTaskModal"]');
        closeModalButtons.forEach(button => {
            button.addEventListener('click', function () {
                const modal = document.getElementById('newTaskModal');
                modal.classList.add('hidden');
            });
        });
    });
</script>

{% endblock %}